#	
identifier:	include
operator:	<
identifier:	iostream
operator:	>
identifier:	using
identifier:	namespace
identifier:	std
delimiter:	;
keyword:	int
identifier:	main
delimiter:	(
delimiter:	)
delimiter:	{
keyword:	int
identifier:	x
operator:	=
number:	10
delimiter:	;
keyword:	if
delimiter:	(
identifier:	x
relational_operator:	==
operator:	=
number:	20
delimiter:	)
delimiter:	{
identifier:	cout
operator:	<
operator:	<
delimiter:	"
identifier:	x
identifier:	is
identifier:	equal
identifier:	to
number:	20
delimiter:	"
operator:	<
operator:	<
identifier:	endl
delimiter:	;
delimiter:	}
keyword:	else
keyword:	if
delimiter:	(
identifier:	x
operator:	>
number:	20
delimiter:	)
delimiter:	{
identifier:	cout
operator:	<
operator:	<
delimiter:	"
identifier:	x
identifier:	is
identifier:	greater
identifier:	than
number:	20
delimiter:	"
operator:	<
operator:	<
identifier:	endl
delimiter:	;
delimiter:	}
keyword:	else
delimiter:	{
identifier:	cout
operator:	<
operator:	<
delimiter:	"
identifier:	x
identifier:	is
identifier:	less
identifier:	than
number:	20
delimiter:	"
operator:	<
operator:	<
identifier:	endl
delimiter:	;
delimiter:	}
identifier:	return
number:	0
delimiter:	;
delimiter:	}
